public class StringUtils {
	public static void main (String[] args){
		String str = " we are  happy!   ";
		String str2 = "we are    happy!   ";
		replaceAllBlank(str, "%20");

		replaceAllBlank(replacePartBlankByReg(str), "%20");
		
		replaceAllBlank(replacePartBlank(str),"%20");

	}

	/**
	 *  问题：将一个字符串中所有的空格替换成“%20”
	 *  算法：用正则表达式完成
	 * @param string 
	 */
	public static void replaceAllBlank(String string, String exp){
		if (string == null) {
			return ;
		}
		String str = string.replaceAll("\\s", exp);
		System.out.println("before:"+string+"\nafter:"+str);
	}

	//================问题1：去掉字符串中重复的空格==================================================
	/**
	 *  算法：用正则表达式完成
	 * @param string 
	 */
	public static String replacePartBlankByReg(String string){

		String str  = string.trim().replaceAll(" +"," ");
		return str;
	}
	
	/**
	 *  算法：用StringBuffer去掉字符串中所有空格
	 * @param str 
	 */
	public static String replaceAllBlankByBuf(String str){
		StringBuffer sb = new StringBuffer();
		int pos = 0;
		while(pos < str.length()){
			char ch = str.charAt(pos++);
			if(ch != ' '){
				sb.append(ch);
			}
		}
		return sb.toString();
	}

	/**
	 *  算法：用StringBuffer去掉字符串中重复的空格
	 * @param str 
	 */
	public static String replacePartBlank(String str){
	
		if(str == null) return null;

		StringBuffer sb = new StringBuffer();
		if (str.charAt(0) != ' '){
			sb.append(str.charAt(0));
		}
		for(int i=2; i<str.length();i++){
			char ch1 = str.charAt(i-1);
			char ch2 = str.charAt(i);
			if(ch1 == ' ' && ch2 == ' '){
				continue;
			}
			sb.append(ch1);
		}
		
		return sb.toString();
	}
}